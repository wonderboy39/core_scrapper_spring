3) AuthInterceptor를 활용한 권한체크 기능 작성

------
Interceptor 역할의 클래스 작성

	목적
		로그인하지 않은 사용자가 게시물리스트에서 새로운 개시물을 작성하는 '/scrapper/create' 를 접근할 경우 사용자가 로그인 페이지(/scrapper/user/login)로 이동할 수 있도록 하는 기능을 개발하는 것이 목적

	접근
		HandlerInterceptorAdapter 를 상속받는 Interceptor 클래스를 작성한다.


	AuthInterceptor.java 작성, HandlerInterceptorAdapter 클래스 상속, 오버라이딩
		Source -> Override/Implements method -> preHandle을 선택한다.

		전체 소스는 아래와 같다.
		package com.spring.scrapper.interceptor;

		import javax.servlet.http.HttpServletRequest;
		import javax.servlet.http.HttpServletResponse;
		import javax.servlet.http.HttpSession;

		import org.slf4j.Logger;
		import org.slf4j.LoggerFactory;
		import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

		public class AuthInterceptor extends HandlerInterceptorAdapter{
			private static final Logger LOGGER = LoggerFactory.getLogger(AuthInterceptor.class);

			@Override
			public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
					throws Exception {
				HttpSession session = request.getSession();
				
				if(session.getAttribute("loginVO") == null){
					response.sendRedirect("/scrapper/"); // 무조건 메인 페이지로 돌아가도록 임시적으로 설정해놓음 
					return false;
				}
				
				return true;
			}
		}


------
servlet-context.xml의 <interceptors>, <beans:bean ref> 설정 추가

	<beans:bean id="authInterceptor" class="com.spring.scrapper.interceptor.AuthInterceptor">
	</beans:bean>

	<interceptors>
		<interceptor>
			...
		</interceptor>
			...
		<interceptor>
			<mapping path="/board/list"/>
			<beans:ref bean="authInterceptor"/>
		</interceptor>
	</interceptors>

전체 소스
	<?xml version="1.0" encoding="UTF-8"?>
	<beans:beans xmlns="http://www.springframework.org/schema/mvc"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:beans="http://www.springframework.org/schema/beans"
		xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

		<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
		
		<!-- Enables the Spring MVC @Controller programming model -->
		<annotation-driven />

		<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
		<resources mapping="/resources/**" location="/resources/" />

		<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
		<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<beans:property name="prefix" value="/WEB-INF/views/" />
			<beans:property name="suffix" value=".jsp" />
		</beans:bean>
		
		<context:component-scan base-package="com.spring.scrapper" />
		
		<beans:bean id="loginInterceptor" class="com.spring.scrapper.interceptor.LoginInterceptor">
		</beans:bean>
		
		<beans:bean id="authInterceptor" class="com.spring.scrapper.interceptor.AuthInterceptor">
		</beans:bean>
		
		<interceptors>
			<interceptor>
				<mapping path="/user/loginPost"/>
				<beans:ref bean="loginInterceptor"/>
			</interceptor>
			<interceptor>
				<mapping path="/board/list"/>
				<beans:ref bean="authInterceptor"/>
			</interceptor>
		</interceptors>
		
	</beans:beans>



------
예제 테스트를 위해 샘플 jsp 작성
	list.jsp 작성
		src/main/webapp/WEB-INF/views/ 아래에 board라는 이름의 디렉터리를 생성한다.

		생성된 src/main/webapp/WEB-INF/views/board/ 아래에 list.jsp 를 생성한다.

		list.jsp에는 아래와 같이 소스를 작성한다.
			<%@page import="java.util.List"%>
			<%@ page language="java" contentType="text/html; charset=UTF-8"
				pageEncoding="UTF-8"%>
			<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>

			<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
			<html>
			<head>
			<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
			<title>글 목록</title>
			<!-- 합쳐지고 최소화된 최신 CSS -->
			<link rel="stylesheet"
				href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css">

			<!-- 부가적인 테마 -->
			<link rel="stylesheet"
				href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css">

			<!-- 합쳐지고 최소화된 최신 자바스크립트 -->
			<script
				src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script>
			</head>
			<body>
			<!-- // 참고 url : https://github.com/wonderboy39/Model2/blob/master/miracle/WebContent/listAllWithPaging.jsp -->
				<h5>
					접속 사용자 :
					<%=session.getAttribute("idKey")%>
				</h5>
				<div class="container">
					<form action="getBoardList.do" method="post">
						<table class="table table-striped table-bordered table-hover">
							<caption></caption>
							<tbody>
								<tr>
									<td>
										<select name="searchCondition">
											<%-- <c:forEach items="${conditionMap}" var="item">
												<option value="${item.value}">${item.key}
											</c:forEach> --%>
										</select> 
										<input name="searchKeyword" type="text" /> 
										<input type="submit" value="검색" /></td>
								</tr>
							</tbody>
						</table>
					</form>
					<table class="table table-striped table-bordered table-hover">
						<caption></caption>
						<thead>
							<tr>
								<th>글 번호</th>
								<th>제목</th>
								<th>작성자</th>
							</tr>
						</thead>
						<tbody>
							<c:choose>
								<c:when test="${boardList.size()==0 }">
									<tr>
										<td>---</td>
										<td>현재 등록된 게시물이 없습니다.</td>
										<td>---</td>
									</tr>
								</c:when>
								<c:otherwise>
									<c:forEach var="item" items="${boardList}" varStatus="status">
										<tr>
											<td>${item.seq}</td>
											<td><a href="getBoard.do?seq=${item.seq}">${item.title}
											</a></td>
											<td>${item.writer}</td>
										</tr>
									</c:forEach>
								</c:otherwise>
							</c:choose>
						</tbody>
					</table>
				</div>
			</body>
			</html>



