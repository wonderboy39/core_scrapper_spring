
--------------------------------------
wget을 이용해 java 8 특정 버전 (1.8.0.91) 설치, tomcat 설치
	sudo yum install wget

	cd ~

	sudo wget --no-cookies \
	--no-check-certificate \
	--header "Cookie: oraclelicense=accept-securebackup-cookie" \
	"http://download.oracle.com/otn/java/jdk/8-b132/jdk-8-linux-x64.tar.gz" \
	-o jdk-8-linux-x64.tar.gz


	sudo cp jdk-8-linux-x64.tar.gz /usr/local/java

	cd /usr/local/java

	sudo tar xvfz jdk-8-linux-x64.tar.gz

	cd /usr/bin/
	sudo ln -s /usr/local/java/jdk1.8.0/bin/java java

--------------------------------------
톰캣 설치
	cd
	mkdir tomcat
	cd tomcat
	wget http://apache.tt.co.kr/tomcat/tomcat-8/v8.0.52/bin/apache-tomcat-8.0.52.tar.gz
	tar xvfz apache-tomcat-8.0.52.tar.gz

--------------------------------------
mariadb 설치, 외부 접속 허용
	참고자료
		https://zetawiki.com/wiki/CentOS7_MariaDB_%EC%84%A4%EC%B9%98 
		http://firstboos.tistory.com/entry/CentOS-7-%EC%97%90%EC%84%9C-mariadb-%EC%84%A4%EC%B9%98
		http://tastydarr.tistory.com/261

	!!!!!!
	그냥 yum 으로 install
		sudo yum install mariadb
		sudo yum install mariadb-server
		rpm -qa | grep mariadb

		/usr/bin/mysqladmin -u root password '1111'
		#sudo mysqladmin password 

	sudo vim /etc/my.cnf
		character-set-server=utf8 
		collation-server=utf8_general_ci
	입력후 저장


	sudo service mariadb restart

	netstat -anp | grep 3306
		(No info could be read for "-p": geteuid()=1000 but you should be root.)
		tcp        0      0 0.0.0.0:3306            0.0.0.0:*               LISTEN      -


	mysql -u root -p
		Enter password:
		Welcome to the MariaDB monitor.  Commands end with ; or \g.
		Your MariaDB connection id is 3
		Server version: 5.5.56-MariaDB MariaDB Server

		Copyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others.

		Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

		MariaDB [(none)]> quit
		Bye

--------------------------------------
EC2 설정
	ec2 management console> 보안그룹 > 리스트 되어있는 것들 중에서 SSH 열려있는 항목을 선택 > 하단의 탭에서 [인바운드] 선택> [편집] 버튼 클릭
		유형 		: 사용자지정(TCP)
		프로토콜 	: TCP
		포트범위 	: 3306
		소스 		: 사용자 지정, 0.0.0.0/0
		설명 		: mariadb external connection - sgjung

		[규칙 추가] 버튼 클릭

	ec2 management console> 보안그룹 > 리스트 되어있는 것들 중에서 SSH 열려있는 항목을 선택 > 하단의 탭에서 [아웃바운드] 선택> [편집] 버튼 클릭
		유형		: 사용자 지정(TCP 규칙)
		프로토콜 	: TCP
		포트범위 	: 3306
		대상주소 	: 사용자 지정, 0.0.0.0/0
		설명 		: mariadb external outflow - sgjung

		[규칙 추가] 버튼 클릭

--------------------------------------
스키마 생성, 유저 생성, database, table 생성, 권한 부여
	mysql -u root -p

	MariaDB [(none)]> create database jasper;
		Query OK, 1 row affected (0.00 sec)

	MariaDB [(none)]> show databases;
		+--------------------+
		| Database           |
		+--------------------+
		| information_schema |
		| jasper             |
		| mysql              |
		| performance_schema |
		| test               |
		+--------------------+
		5 rows in set (0.00 sec)


	MariaDB [(none)]> create user 'jasper'@'%' identified by '1111';
		Query OK, 0 rows affected (0.00 sec)

	MariaDB [(none)]> create user 'jasper'@'localhost' identified by '1111';
		Query OK, 0 rows affected (0.00 sec)

	MariaDB [(none)]> flush privileges;
		Query OK, 0 rows affected (0.00 sec)

	MariaDB [(none)]> grant all privileges on jasper.* to 'jasper'@'%';
		Query OK, 0 rows affected (0.00 sec)

	MariaDB [(none)]> grant all privileges on jasper.* to 'jasper'@'localhost';
		Query OK, 0 rows affected (0.00 sec)

	MariaDB [(none)]> grant all privileges on *.* to 'root'@'%' identified by '1111';
		Query OK, 0 rows affected (0.00 sec)


	테이블 생성
		CREATE TABLE Book
		(
		  bookId     BIGINT AUTO_INCREMENT
		    PRIMARY KEY,
		  bookName   VARCHAR(80) NOT NULL,
		  authorId   BIGINT      NULL,
		  authorName VARCHAR(80) NULL,
		  price      BIGINT      NULL
		)
		  COMMENT '샘플 테이블 '
		  ENGINE = InnoDB;

		-- auto-generated definition
		CREATE TABLE Author
		(
		  authorId   BIGINT AUTO_INCREMENT,
		  authorName VARCHAR(80) DEFAULT ''                 NOT NULL,
		  regDate    DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL,
		  PRIMARY KEY (authorId, authorName, regDate)
		)
		  COMMENT '책 저자 테이블'
		  ENGINE = InnoDB;

--------------------------------------
리눅스 유저, 유저 그룹 생성(jasper, scrapper, 그룹명 : developer)
	디렉터리 생성
		/workspace
		/workspace/developer
		/workspace/developer/scrapper
		/worksapce/developer/jasper

#		/workspace/developer/scrapper/sgjung
#		/workspace/developer/scrapper/scrapper -- APP (localhost)

	그룹생성
		developer
			user
				scrapper, jasper
		devops	
			user
				jenkins (추후 변경)

	유저 생성
		jasper		/workspace/developer/jasper
		scrapper 	/workspace/developer/scrapper
		jenkins (젠킨스 설치시 지정됨...)


	그룹 변경
		jenkins :: 젠킨스 설치 후 devops 로 변경할 것!!

	developer에 속하는 사용자는 99xx대의 번호를 순차적으로 부여하도록 잡는다.

	developer 그룹 생성 및 상위디렉터리 지정
		sudo mkdir -p /workspace/developer
		sudo groupadd -g 9900 developer

	scrapper 유저 생성
		sudo useradd -g developer -u 9901 -d /workspace/developer/scrapper scrapper

	jasper 유저 생성
		sudo useradd -g developer -u 9902 -d /workspace/developer/jasper jasper	

	만약 실수로 유저명을 잘못 입력해 오타가 났다면
		sudo userdel -r 유저명 
	을 입력하도록 한다. 이에 대한 자세한 설명은 
		http://jobdahan.net/server_linux/1518154
		http://webdir.tistory.com/134
	에 있다.

	jasper, scrapper 비밀번호 지정
		sudo passwd jasper
		sudo passwd scrapper

--------------------------------------
젠킨스 설치, tomcat 위에서 구동되도록
	jasper 유저로 이동 및 홈디렉터리로 이동 
 		su - jasper
		pwd
			/workspace/developer/jasper
	젠킨스 구동 디렉터리 지정, 톰캣 다운로드 jenkins war파일 다운로드		
		mkdir jenkins
		cd jenkins/
		wget http://mirrors.jenkins.io/war-stable/latest/jenkins.war

	tar xvfz apache-tomcat-8.0.52.tar.gz
	cd apache-tomcat-8.0.52/webapps/
	pwd
		/workspace/developer/jasper/jenkins/apache-tomcat-8.0.52/webapps
	cp ~/jenkins/jenkins.war .
	cd ~/jenkins/apache-tomcat-8.0.52/bin/
	./startup.sh
		Using CATALINA_BASE:   /workspace/developer/jasper/jenkins/apache-tomcat-8.0.52
		Using CATALINA_HOME:   /workspace/developer/jasper/jenkins/apache-tomcat-8.0.52
		Using CATALINA_TMPDIR: /workspace/developer/jasper/jenkins/apache-tomcat-8.0.52/temp
		Using JRE_HOME:        /
		Using CLASSPATH:       /workspace/developer/jasper/jenkins/apache-tomcat-8.0.52/bin/bootstrap.jar:/workspace/developer/jasper/jenkins/apache-tomcat-8.0.52/bin/tomcat-juli.jar
		Tomcat started.

	conf/server.xml의 8080포트를 9901로 수정

	톰캣 페이지 접속
		http://[awsurl]:9901

	톰캣 관리자 및 계정 id, password 설정
		cd ~/jenkiins/apache-tomcat-8.0.52/conf
		vim tomcat-users.xml
		...
		...
			<role rolename="tomcat"/>
			<role rolename="jasper"/>
			<role rolename="jenkins"/>
			<user username="tomcat" password="1111" roles="tomcat"/>
			<user username="jasper" password="1111" roles="tomcat,jasper"/>
			<user username="jenkins" password="1111" roles="tomcat,jasper,jenkins"/>




 For example, to add the manager-gui role to a user named tomcat with a password of s3cret, add the following to the config file listed above.

<role rolename="manager-gui"/>
<user username="tomcat" password="s3cret" roles="manager-gui"/>

Note that for Tomcat 7 onwards, the roles required to use the manager application were changed from the single manager role to the following four roles. You will need to assign the role(s) required for the functionality you wish to access.

    manager-gui - allows access to the HTML GUI and the status pages
    manager-script - allows access to the text interface and the status pages
    manager-jmx - allows access to the JMX proxy and the status pages
    manager-status - allows access to the status pages only







 You are not authorized to view this page.

If you have already configured the Manager application to allow access and you have used your browsers back button, used a saved book-mark or similar then you may have triggered the cross-site request forgery (CSRF) protection that has been enabled for the HTML interface of the Manager application. You will need to reset this protection by returning to the main Manager page. Once you return to this page, you will be able to continue using the Manager application's HTML interface normally. If you continue to see this access denied message, check that you have the necessary permissions to access this application.

If you have not changed any configuration files, please examine the file conf/tomcat-users.xml in your installation. That file must contain the credentials to let you use this webapp.

For example, to add the manager-gui role to a user named tomcat with a password of s3cret, add the following to the config file listed above.

<role rolename="manager-gui"/>
<user username="tomcat" password="s3cret" roles="manager-gui"/>

Note that for Tomcat 7 onwards, the roles required to use the manager application were changed from the single manager role to the following four roles. You will need to assign the role(s) required for the functionality you wish to access.

    manager-gui - allows access to the HTML GUI and the status pages
    manager-script - allows access to the text interface and the status pages
    manager-jmx - allows access to the JMX proxy and the status pages
    manager-status - allows access to the status pages only

The HTML interface is protected against CSRF but the text and JMX interfaces are not. To maintain the CSRF protection:

    Users with the manager-gui role should not be granted either the manager-script or manager-jmx roles.
    If the text or jmx interfaces are accessed through a browser (e.g. for testing since these interfaces are intended for tools not humans) then the browser must be closed afterwards to terminate the session.

For more information - please see the Manager App HOW-TO. 




--------------------------------------
etc
https://github.com/yona-projects/yona/wiki/MariaDB-%EC%9E%AC%EC%8B%9C%EC%9E%91-%EB%B0%A9%EB%B2%95





